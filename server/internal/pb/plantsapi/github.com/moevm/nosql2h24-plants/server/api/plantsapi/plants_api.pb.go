// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.29.0--rc2
// source: plantsapi/plants_api.proto

package plantsapi

import (
	context "context"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetCareRuleV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Species string `protobuf:"bytes,1,opt,name=species,proto3" json:"species,omitempty"`
}

func (x *GetCareRuleV1Request) Reset() {
	*x = GetCareRuleV1Request{}
	mi := &file_plantsapi_plants_api_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCareRuleV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCareRuleV1Request) ProtoMessage() {}

func (x *GetCareRuleV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_plantsapi_plants_api_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCareRuleV1Request.ProtoReflect.Descriptor instead.
func (*GetCareRuleV1Request) Descriptor() ([]byte, []int) {
	return file_plantsapi_plants_api_proto_rawDescGZIP(), []int{0}
}

func (x *GetCareRuleV1Request) GetSpecies() string {
	if x != nil {
		return x.Species
	}
	return ""
}

type GetCareRuleV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CareRules []*CareRule `protobuf:"bytes,1,rep,name=careRules,proto3" json:"careRules,omitempty"`
}

func (x *GetCareRuleV1Response) Reset() {
	*x = GetCareRuleV1Response{}
	mi := &file_plantsapi_plants_api_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCareRuleV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCareRuleV1Response) ProtoMessage() {}

func (x *GetCareRuleV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_plantsapi_plants_api_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCareRuleV1Response.ProtoReflect.Descriptor instead.
func (*GetCareRuleV1Response) Descriptor() ([]byte, []int) {
	return file_plantsapi_plants_api_proto_rawDescGZIP(), []int{1}
}

func (x *GetCareRuleV1Response) GetCareRules() []*CareRule {
	if x != nil {
		return x.CareRules
	}
	return nil
}

type CareRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User        string                 `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Description string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *CareRule) Reset() {
	*x = CareRule{}
	mi := &file_plantsapi_plants_api_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CareRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CareRule) ProtoMessage() {}

func (x *CareRule) ProtoReflect() protoreflect.Message {
	mi := &file_plantsapi_plants_api_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CareRule.ProtoReflect.Descriptor instead.
func (*CareRule) Descriptor() ([]byte, []int) {
	return file_plantsapi_plants_api_proto_rawDescGZIP(), []int{2}
}

func (x *CareRule) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *CareRule) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CareRule) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type CreateNewCareRuleV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LightCondition      string `protobuf:"bytes,1,opt,name=lightCondition,proto3" json:"lightCondition,omitempty"`
	Type                string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Species             string `protobuf:"bytes,3,opt,name=species,proto3" json:"species,omitempty"`
	Image               string `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	TemperatureRegime   string `protobuf:"bytes,5,opt,name=temperatureRegime,proto3" json:"temperatureRegime,omitempty"`
	DescriptionAddition string `protobuf:"bytes,6,opt,name=descriptionAddition,proto3" json:"descriptionAddition,omitempty"`
	UserId              string `protobuf:"bytes,7,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *CreateNewCareRuleV1Request) Reset() {
	*x = CreateNewCareRuleV1Request{}
	mi := &file_plantsapi_plants_api_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNewCareRuleV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNewCareRuleV1Request) ProtoMessage() {}

func (x *CreateNewCareRuleV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_plantsapi_plants_api_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNewCareRuleV1Request.ProtoReflect.Descriptor instead.
func (*CreateNewCareRuleV1Request) Descriptor() ([]byte, []int) {
	return file_plantsapi_plants_api_proto_rawDescGZIP(), []int{3}
}

func (x *CreateNewCareRuleV1Request) GetLightCondition() string {
	if x != nil {
		return x.LightCondition
	}
	return ""
}

func (x *CreateNewCareRuleV1Request) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CreateNewCareRuleV1Request) GetSpecies() string {
	if x != nil {
		return x.Species
	}
	return ""
}

func (x *CreateNewCareRuleV1Request) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *CreateNewCareRuleV1Request) GetTemperatureRegime() string {
	if x != nil {
		return x.TemperatureRegime
	}
	return ""
}

func (x *CreateNewCareRuleV1Request) GetDescriptionAddition() string {
	if x != nil {
		return x.DescriptionAddition
	}
	return ""
}

func (x *CreateNewCareRuleV1Request) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type CreateNewCareRuleV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateNewCareRuleV1Response) Reset() {
	*x = CreateNewCareRuleV1Response{}
	mi := &file_plantsapi_plants_api_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNewCareRuleV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNewCareRuleV1Response) ProtoMessage() {}

func (x *CreateNewCareRuleV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_plantsapi_plants_api_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNewCareRuleV1Response.ProtoReflect.Descriptor instead.
func (*CreateNewCareRuleV1Response) Descriptor() ([]byte, []int) {
	return file_plantsapi_plants_api_proto_rawDescGZIP(), []int{4}
}

type GetPlantsWithCareRulesV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetPlantsWithCareRulesV1Request) Reset() {
	*x = GetPlantsWithCareRulesV1Request{}
	mi := &file_plantsapi_plants_api_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlantsWithCareRulesV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlantsWithCareRulesV1Request) ProtoMessage() {}

func (x *GetPlantsWithCareRulesV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_plantsapi_plants_api_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlantsWithCareRulesV1Request.ProtoReflect.Descriptor instead.
func (*GetPlantsWithCareRulesV1Request) Descriptor() ([]byte, []int) {
	return file_plantsapi_plants_api_proto_rawDescGZIP(), []int{5}
}

type GetPlantsWithCareRulesV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plants []*GetPlantsWithCareRulesV1Response_Plant `protobuf:"bytes,1,rep,name=plants,proto3" json:"plants,omitempty"`
}

func (x *GetPlantsWithCareRulesV1Response) Reset() {
	*x = GetPlantsWithCareRulesV1Response{}
	mi := &file_plantsapi_plants_api_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlantsWithCareRulesV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlantsWithCareRulesV1Response) ProtoMessage() {}

func (x *GetPlantsWithCareRulesV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_plantsapi_plants_api_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlantsWithCareRulesV1Response.ProtoReflect.Descriptor instead.
func (*GetPlantsWithCareRulesV1Response) Descriptor() ([]byte, []int) {
	return file_plantsapi_plants_api_proto_rawDescGZIP(), []int{6}
}

func (x *GetPlantsWithCareRulesV1Response) GetPlants() []*GetPlantsWithCareRulesV1Response_Plant {
	if x != nil {
		return x.Plants
	}
	return nil
}

type GetExampleV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetExampleV1Request) Reset() {
	*x = GetExampleV1Request{}
	mi := &file_plantsapi_plants_api_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExampleV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExampleV1Request) ProtoMessage() {}

func (x *GetExampleV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_plantsapi_plants_api_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExampleV1Request.ProtoReflect.Descriptor instead.
func (*GetExampleV1Request) Descriptor() ([]byte, []int) {
	return file_plantsapi_plants_api_proto_rawDescGZIP(), []int{7}
}

type GetExampleV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetExampleV1Response) Reset() {
	*x = GetExampleV1Response{}
	mi := &file_plantsapi_plants_api_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExampleV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExampleV1Response) ProtoMessage() {}

func (x *GetExampleV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_plantsapi_plants_api_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExampleV1Response.ProtoReflect.Descriptor instead.
func (*GetExampleV1Response) Descriptor() ([]byte, []int) {
	return file_plantsapi_plants_api_proto_rawDescGZIP(), []int{8}
}

type GetPlantsWithCareRulesV1Response_Plant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Species string `protobuf:"bytes,1,opt,name=species,proto3" json:"species,omitempty"`
	Image   string `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	Id      string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetPlantsWithCareRulesV1Response_Plant) Reset() {
	*x = GetPlantsWithCareRulesV1Response_Plant{}
	mi := &file_plantsapi_plants_api_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlantsWithCareRulesV1Response_Plant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlantsWithCareRulesV1Response_Plant) ProtoMessage() {}

func (x *GetPlantsWithCareRulesV1Response_Plant) ProtoReflect() protoreflect.Message {
	mi := &file_plantsapi_plants_api_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlantsWithCareRulesV1Response_Plant.ProtoReflect.Descriptor instead.
func (*GetPlantsWithCareRulesV1Response_Plant) Descriptor() ([]byte, []int) {
	return file_plantsapi_plants_api_proto_rawDescGZIP(), []int{6, 0}
}

func (x *GetPlantsWithCareRulesV1Response_Plant) GetSpecies() string {
	if x != nil {
		return x.Species
	}
	return ""
}

func (x *GetPlantsWithCareRulesV1Response_Plant) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *GetPlantsWithCareRulesV1Response_Plant) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_plantsapi_plants_api_proto protoreflect.FileDescriptor

var file_plantsapi_plants_api_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x73, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6c, 0x61, 0x6e,
	0x74, 0x73, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x70, 0x6c,
	0x61, 0x6e, 0x74, 0x73, 0x61, 0x70, 0x69, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x30, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72,
	0x65, 0x52, 0x75, 0x6c, 0x65, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x70, 0x65, 0x63, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x70, 0x65, 0x63, 0x69, 0x65, 0x73, 0x22, 0x4a, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43,
	0x61, 0x72, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x31, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x73, 0x61, 0x70, 0x69,
	0x2e, 0x43, 0x61, 0x72, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x09, 0x63, 0x61, 0x72, 0x65, 0x52,
	0x75, 0x6c, 0x65, 0x73, 0x22, 0x7b, 0x0a, 0x08, 0x43, 0x61, 0x72, 0x65, 0x52, 0x75, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x80, 0x02, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x43,
	0x61, 0x72, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x70, 0x65, 0x63, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x70, 0x65, 0x63, 0x69, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x11,
	0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x1d, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65,
	0x77, 0x43, 0x61, 0x72, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x21, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x73,
	0x57, 0x69, 0x74, 0x68, 0x43, 0x61, 0x72, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x56, 0x31, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xb6, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x50, 0x6c,
	0x61, 0x6e, 0x74, 0x73, 0x57, 0x69, 0x74, 0x68, 0x43, 0x61, 0x72, 0x65, 0x52, 0x75, 0x6c, 0x65,
	0x73, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x06, 0x70,
	0x6c, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x70, 0x6c,
	0x61, 0x6e, 0x74, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x74,
	0x73, 0x57, 0x69, 0x74, 0x68, 0x43, 0x61, 0x72, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x56, 0x31,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x52, 0x06,
	0x70, 0x6c, 0x61, 0x6e, 0x74, 0x73, 0x1a, 0x47, 0x0a, 0x05, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x70, 0x65, 0x63, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x70, 0x65, 0x63, 0x69, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x15, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x56, 0x31, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x16, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x45, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xe9,
	0x03, 0x0a, 0x09, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x73, 0x41, 0x50, 0x49, 0x12, 0x61, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x56, 0x31, 0x12, 0x1e, 0x2e, 0x70,
	0x6c, 0x61, 0x6e, 0x74, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70,
	0x6c, 0x61, 0x6e, 0x74, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x10, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x0a, 0x12, 0x08, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12,
	0x8a, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x73, 0x57, 0x69, 0x74,
	0x68, 0x43, 0x61, 0x72, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x56, 0x31,
	0x12, 0x2a, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x6c, 0x61, 0x6e, 0x74, 0x73, 0x57, 0x69, 0x74, 0x68, 0x43, 0x61, 0x72, 0x65, 0x52, 0x75,
	0x6c, 0x65, 0x73, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x70,
	0x6c, 0x61, 0x6e, 0x74, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e,
	0x74, 0x73, 0x57, 0x69, 0x74, 0x68, 0x43, 0x61, 0x72, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x56,
	0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x11, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x0b, 0x12, 0x09, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x61, 0x72, 0x65, 0x12, 0x7b, 0x0a, 0x13,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x43, 0x61, 0x72, 0x65, 0x52, 0x75, 0x6c,
	0x65, 0x56, 0x31, 0x12, 0x25, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x73, 0x61, 0x70, 0x69, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x43, 0x61, 0x72, 0x65, 0x52, 0x75, 0x6c,
	0x65, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x70, 0x6c, 0x61,
	0x6e, 0x74, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x77,
	0x43, 0x61, 0x72, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x22, 0x0d, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x63, 0x61, 0x72, 0x65, 0x2f, 0x6e, 0x65, 0x77, 0x12, 0x6f, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x43, 0x61, 0x72, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x56, 0x31, 0x12, 0x1f, 0x2e, 0x70, 0x6c, 0x61,
	0x6e, 0x74, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x65, 0x52, 0x75,
	0x6c, 0x65, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x6c,
	0x61, 0x6e, 0x74, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x65, 0x52,
	0x75, 0x6c, 0x65, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x61, 0x72, 0x65,
	0x2f, 0x7b, 0x73, 0x70, 0x65, 0x63, 0x69, 0x65, 0x73, 0x7d, 0x42, 0x42, 0x5a, 0x40, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x6f, 0x65, 0x76, 0x6d, 0x2f, 0x6e,
	0x6f, 0x73, 0x71, 0x6c, 0x32, 0x68, 0x32, 0x34, 0x2d, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x73, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74,
	0x73, 0x61, 0x70, 0x69, 0x3b, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x73, 0x61, 0x70, 0x69, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_plantsapi_plants_api_proto_rawDescOnce sync.Once
	file_plantsapi_plants_api_proto_rawDescData = file_plantsapi_plants_api_proto_rawDesc
)

func file_plantsapi_plants_api_proto_rawDescGZIP() []byte {
	file_plantsapi_plants_api_proto_rawDescOnce.Do(func() {
		file_plantsapi_plants_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_plantsapi_plants_api_proto_rawDescData)
	})
	return file_plantsapi_plants_api_proto_rawDescData
}

var file_plantsapi_plants_api_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_plantsapi_plants_api_proto_goTypes = []any{
	(*GetCareRuleV1Request)(nil),                   // 0: plantsapi.GetCareRuleV1Request
	(*GetCareRuleV1Response)(nil),                  // 1: plantsapi.GetCareRuleV1Response
	(*CareRule)(nil),                               // 2: plantsapi.CareRule
	(*CreateNewCareRuleV1Request)(nil),             // 3: plantsapi.CreateNewCareRuleV1Request
	(*CreateNewCareRuleV1Response)(nil),            // 4: plantsapi.CreateNewCareRuleV1Response
	(*GetPlantsWithCareRulesV1Request)(nil),        // 5: plantsapi.GetPlantsWithCareRulesV1Request
	(*GetPlantsWithCareRulesV1Response)(nil),       // 6: plantsapi.GetPlantsWithCareRulesV1Response
	(*GetExampleV1Request)(nil),                    // 7: plantsapi.GetExampleV1Request
	(*GetExampleV1Response)(nil),                   // 8: plantsapi.GetExampleV1Response
	(*GetPlantsWithCareRulesV1Response_Plant)(nil), // 9: plantsapi.GetPlantsWithCareRulesV1Response.Plant
	(*timestamppb.Timestamp)(nil),                  // 10: google.protobuf.Timestamp
}
var file_plantsapi_plants_api_proto_depIdxs = []int32{
	2,  // 0: plantsapi.GetCareRuleV1Response.careRules:type_name -> plantsapi.CareRule
	10, // 1: plantsapi.CareRule.created_at:type_name -> google.protobuf.Timestamp
	9,  // 2: plantsapi.GetPlantsWithCareRulesV1Response.plants:type_name -> plantsapi.GetPlantsWithCareRulesV1Response.Plant
	7,  // 3: plantsapi.PlantsAPI.GetExampleV1:input_type -> plantsapi.GetExampleV1Request
	5,  // 4: plantsapi.PlantsAPI.GetPlantsWithCareRuleRulesV1:input_type -> plantsapi.GetPlantsWithCareRulesV1Request
	3,  // 5: plantsapi.PlantsAPI.CreateNewCareRuleV1:input_type -> plantsapi.CreateNewCareRuleV1Request
	0,  // 6: plantsapi.PlantsAPI.GetCareRuleV1:input_type -> plantsapi.GetCareRuleV1Request
	8,  // 7: plantsapi.PlantsAPI.GetExampleV1:output_type -> plantsapi.GetExampleV1Response
	6,  // 8: plantsapi.PlantsAPI.GetPlantsWithCareRuleRulesV1:output_type -> plantsapi.GetPlantsWithCareRulesV1Response
	4,  // 9: plantsapi.PlantsAPI.CreateNewCareRuleV1:output_type -> plantsapi.CreateNewCareRuleV1Response
	1,  // 10: plantsapi.PlantsAPI.GetCareRuleV1:output_type -> plantsapi.GetCareRuleV1Response
	7,  // [7:11] is the sub-list for method output_type
	3,  // [3:7] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_plantsapi_plants_api_proto_init() }
func file_plantsapi_plants_api_proto_init() {
	if File_plantsapi_plants_api_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_plantsapi_plants_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_plantsapi_plants_api_proto_goTypes,
		DependencyIndexes: file_plantsapi_plants_api_proto_depIdxs,
		MessageInfos:      file_plantsapi_plants_api_proto_msgTypes,
	}.Build()
	File_plantsapi_plants_api_proto = out.File
	file_plantsapi_plants_api_proto_rawDesc = nil
	file_plantsapi_plants_api_proto_goTypes = nil
	file_plantsapi_plants_api_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PlantsAPIClient is the client API for PlantsAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PlantsAPIClient interface {
	GetExampleV1(ctx context.Context, in *GetExampleV1Request, opts ...grpc.CallOption) (*GetExampleV1Response, error)
	GetPlantsWithCareRuleRulesV1(ctx context.Context, in *GetPlantsWithCareRulesV1Request, opts ...grpc.CallOption) (*GetPlantsWithCareRulesV1Response, error)
	CreateNewCareRuleV1(ctx context.Context, in *CreateNewCareRuleV1Request, opts ...grpc.CallOption) (*CreateNewCareRuleV1Response, error)
	GetCareRuleV1(ctx context.Context, in *GetCareRuleV1Request, opts ...grpc.CallOption) (*GetCareRuleV1Response, error)
}

type plantsAPIClient struct {
	cc grpc.ClientConnInterface
}

func NewPlantsAPIClient(cc grpc.ClientConnInterface) PlantsAPIClient {
	return &plantsAPIClient{cc}
}

func (c *plantsAPIClient) GetExampleV1(ctx context.Context, in *GetExampleV1Request, opts ...grpc.CallOption) (*GetExampleV1Response, error) {
	out := new(GetExampleV1Response)
	err := c.cc.Invoke(ctx, "/plantsapi.PlantsAPI/GetExampleV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *plantsAPIClient) GetPlantsWithCareRuleRulesV1(ctx context.Context, in *GetPlantsWithCareRulesV1Request, opts ...grpc.CallOption) (*GetPlantsWithCareRulesV1Response, error) {
	out := new(GetPlantsWithCareRulesV1Response)
	err := c.cc.Invoke(ctx, "/plantsapi.PlantsAPI/GetPlantsWithCareRuleRulesV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *plantsAPIClient) CreateNewCareRuleV1(ctx context.Context, in *CreateNewCareRuleV1Request, opts ...grpc.CallOption) (*CreateNewCareRuleV1Response, error) {
	out := new(CreateNewCareRuleV1Response)
	err := c.cc.Invoke(ctx, "/plantsapi.PlantsAPI/CreateNewCareRuleV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *plantsAPIClient) GetCareRuleV1(ctx context.Context, in *GetCareRuleV1Request, opts ...grpc.CallOption) (*GetCareRuleV1Response, error) {
	out := new(GetCareRuleV1Response)
	err := c.cc.Invoke(ctx, "/plantsapi.PlantsAPI/GetCareRuleV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PlantsAPIServer is the server API for PlantsAPI service.
type PlantsAPIServer interface {
	GetExampleV1(context.Context, *GetExampleV1Request) (*GetExampleV1Response, error)
	GetPlantsWithCareRuleRulesV1(context.Context, *GetPlantsWithCareRulesV1Request) (*GetPlantsWithCareRulesV1Response, error)
	CreateNewCareRuleV1(context.Context, *CreateNewCareRuleV1Request) (*CreateNewCareRuleV1Response, error)
	GetCareRuleV1(context.Context, *GetCareRuleV1Request) (*GetCareRuleV1Response, error)
}

// UnimplementedPlantsAPIServer can be embedded to have forward compatible implementations.
type UnimplementedPlantsAPIServer struct {
}

func (*UnimplementedPlantsAPIServer) GetExampleV1(context.Context, *GetExampleV1Request) (*GetExampleV1Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetExampleV1 not implemented")
}
func (*UnimplementedPlantsAPIServer) GetPlantsWithCareRuleRulesV1(context.Context, *GetPlantsWithCareRulesV1Request) (*GetPlantsWithCareRulesV1Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPlantsWithCareRuleRulesV1 not implemented")
}
func (*UnimplementedPlantsAPIServer) CreateNewCareRuleV1(context.Context, *CreateNewCareRuleV1Request) (*CreateNewCareRuleV1Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateNewCareRuleV1 not implemented")
}
func (*UnimplementedPlantsAPIServer) GetCareRuleV1(context.Context, *GetCareRuleV1Request) (*GetCareRuleV1Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCareRuleV1 not implemented")
}

func RegisterPlantsAPIServer(s *grpc.Server, srv PlantsAPIServer) {
	s.RegisterService(&_PlantsAPI_serviceDesc, srv)
}

func _PlantsAPI_GetExampleV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetExampleV1Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlantsAPIServer).GetExampleV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/plantsapi.PlantsAPI/GetExampleV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlantsAPIServer).GetExampleV1(ctx, req.(*GetExampleV1Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlantsAPI_GetPlantsWithCareRuleRulesV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPlantsWithCareRulesV1Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlantsAPIServer).GetPlantsWithCareRuleRulesV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/plantsapi.PlantsAPI/GetPlantsWithCareRuleRulesV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlantsAPIServer).GetPlantsWithCareRuleRulesV1(ctx, req.(*GetPlantsWithCareRulesV1Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlantsAPI_CreateNewCareRuleV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNewCareRuleV1Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlantsAPIServer).CreateNewCareRuleV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/plantsapi.PlantsAPI/CreateNewCareRuleV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlantsAPIServer).CreateNewCareRuleV1(ctx, req.(*CreateNewCareRuleV1Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlantsAPI_GetCareRuleV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCareRuleV1Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlantsAPIServer).GetCareRuleV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/plantsapi.PlantsAPI/GetCareRuleV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlantsAPIServer).GetCareRuleV1(ctx, req.(*GetCareRuleV1Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _PlantsAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "plantsapi.PlantsAPI",
	HandlerType: (*PlantsAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetExampleV1",
			Handler:    _PlantsAPI_GetExampleV1_Handler,
		},
		{
			MethodName: "GetPlantsWithCareRuleRulesV1",
			Handler:    _PlantsAPI_GetPlantsWithCareRuleRulesV1_Handler,
		},
		{
			MethodName: "CreateNewCareRuleV1",
			Handler:    _PlantsAPI_CreateNewCareRuleV1_Handler,
		},
		{
			MethodName: "GetCareRuleV1",
			Handler:    _PlantsAPI_GetCareRuleV1_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "plantsapi/plants_api.proto",
}
